@{
    ViewBag.Title = "Thông tin khách hàng";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}

<link rel="stylesheet" href="~/Content/User_info.css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
<div class="customer-info-page">
    <div class="container">
        <div class="row">
            <!-- Sidebar trái -->
            <div class="col-md-3">
                <ul class="nav flex-column">
                    <li class="nav-item">
                        <a class="nav-link active" id="account-info" href="javascript:void(0)">Thông tin tài khoản</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="order-history" href="javascript:void(0)">Lịch sử mua hàng</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("Logout", "Account")">Đăng xuất</a>
                    </li>
                </ul>
            </div>

            <!-- Nội dung bên phải -->
            <div class="col-md-9">
                <!-- Thông tin tài khoản -->
                <div id="account-info-section">
                    <br />
                    <h2 class="mb-4">Thông tin tài khoản</h2>
                    <form id="update-user-form" method="post" action="@Url.Action("UpdateUserInfo", "Account")">
                        <div class="card shadow-sm">
                            <div class="card-header">
                                <h4>Chỉnh sửa thông tin</h4>
                            </div>
                            <div class="card-body">
                                <div class="customer-info">
                                    <input type="hidden" name="UserName" value="@Model.UserName" />
                                    <div class="mb-3">
                                        <label for="UserName" class="form-label">Tên tài khoản:</label>
                                        <input type="text" class="form-control" id="UserName" name="UserName" value="@Model.UserName" readonly />
                                    </div>

                                    <div class="mb-3 position-relative">
                                        <label for="Password" class="form-label">Mật khẩu:</label>
                                        <input type="password" class="form-control" id="Password" name="Password" value="@Model.Password" readonly />
                                        <i class="bi bi-eye-slash" id="toggle-password" style="position: absolute; right: 10px; top: 35px; cursor: pointer;"></i>
                                    </div>
                                    <div class="mb-3">
                                        <label for="FullName" class="form-label">Tên khách hàng:</label>
                                        <input type="text" class="form-control" id="FullName" name="FullName" value="@Model.FullName" readonly />
                                    </div>

                                    <div class="mb-3">
                                        <label for="Email" class="form-label">Email:</label>
                                        <input type="email" class="form-control" id="Email" name="Email" value="@Model.Email" readonly />
                                    </div>

                                    <div class="mb-3">
                                        <label for="PhoneNumber" class="form-label">Số điện thoại:</label>
                                        <input type="text" class="form-control" id="PhoneNumber" name="PhoneNumber" value="@Model.PhoneNumber" readonly />
                                    </div>

                                    <div class="mb-3">
                                        <label for="Address" class="form-label">Địa chỉ:</label>
                                        <textarea class="form-control" id="Address" name="Address" readonly>@Model.Address</textarea>
                                    </div>
                                </div>

                                <div class="form-actions d-flex justify-content-center">
                                    <button type="button" id="edit-button" class="btn btn-warning">Chỉnh sửa</button>
                                    <button type="submit" id="save-button" class="btn btn-success" style="display: none;">Lưu thông tin</button>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>

                <!-- Lịch sử mua hàng -->
                <div id="order-history-section" style="display:none;">
                    <br />
                    <h2 class="mb-4">Lịch sử mua hàng</h2>
                    <div id="order-history-list" class="container">
                        <!-- Các thẻ đơn hàng sẽ được load ở đây -->
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const accountInfoButton = document.getElementById("account-info");
        const orderHistoryButton = document.getElementById("order-history");
        const accountInfoSection = document.getElementById("account-info-section");
        const orderHistorySection = document.getElementById("order-history-section");

        // Bật mục Thông tin tài khoản
        accountInfoButton.addEventListener("click", function () {
            accountInfoSection.style.display = "block";
            orderHistorySection.style.display = "none";
            accountInfoButton.classList.add("active");
            orderHistoryButton.classList.remove("active");
        });

        // Bật mục Lịch sử mua hàng
        orderHistoryButton.addEventListener("click", function () {
            accountInfoSection.style.display = "none";
            orderHistorySection.style.display = "block";
            accountInfoButton.classList.remove("active");
            orderHistoryButton.classList.add("active");

            // Load lịch sử mua hàng
            loadOrderHistory();
        });

        // Mặc định hiển thị thông tin tài khoản khi trang được tải
        accountInfoButton.click();

        // Hiển thị/ẩn mật khẩu
        document.getElementById("toggle-password").addEventListener("click", function () {
            const passwordField = document.getElementById("Password");
            const passwordFieldType = passwordField.type;

            if (passwordFieldType === "password") {
                passwordField.type = "text";
                this.classList.remove("bi-eye-slash");
                this.classList.add("bi-eye");
            } else {
                passwordField.type = "password";
                this.classList.remove("bi-eye");
                this.classList.add("bi-eye-slash");
            }
        });
    });
    // Chỉnh sửa thông tin
    const editButton = document.getElementById("edit-button");
    const saveButton = document.getElementById("save-button");
    const formFields = document.querySelectorAll("#update-user-form input, #update-user-form textarea");

    editButton.addEventListener("click", function () {
        formFields.forEach(field => {
            field.removeAttribute("readonly");
        });
        editButton.style.display = "none";
        saveButton.style.display = "inline-block";
    });

    // Chuyển đổi ngày JSON
    function parseJsonDate(jsonDate) {
        const timestamp = parseInt(jsonDate.replace(/\/Date\((\d+)\)\//, "$1"));
        const date = new Date(timestamp);
        return date.toLocaleDateString("vi-VN");
    }

    function loadOrderHistory() {
        const orderHistoryList = document.getElementById("order-history-list");

        fetch("/Account/GetOrderHistory")
            .then(response => response.json())
            .then(data => {
                orderHistoryList.innerHTML = ""; // Xóa dữ liệu cũ

                if (!data || !Array.isArray(data) || data.length === 0) {
                    orderHistoryList.innerHTML = "<p class='text-center'>Không có lịch sử mua hàng nào.</p>";
                    return;
                }

                data.forEach(order => {
                    // Chuyển đổi ngày mua
                    const formattedDate = new Date(order.OrderDate).toLocaleDateString("vi-VN", {
                        day: "2-digit",
                        month: "2-digit",
                        year: "numeric",
                        hour: "2-digit",
                        minute: "2-digit"
                    });

                    // Chuẩn bị thẻ hiển thị đơn hàng
                    const card = document.createElement("div");
                    card.className = "card mb-4 shadow-sm";

                    let itemsHtml = "";
                    order.Items.forEach(item => {
                        itemsHtml += `
                        <div class="d-flex align-items-center mb-3">
                            <img src="/Content/img/${item.ImageUrl}" alt="${item.Name}" class="img-thumbnail me-3" style="width: 80px; height: 80px;">
                            <div>
                                <h6>${item.Name}</h6>
                                <p class="mb-0">Số lượng: ${item.Quantity}</p>
                                <p class="mb-0">Thành tiền: ${(item.Price).toLocaleString("vi-VN")} ₫</p>
                            </div>
                        </div>
                    `;
                    });

                    card.innerHTML = `
                    <div class="card-body">
                        <h5 class="card-title">Ngày mua: ${formattedDate}</h5>
                        <div>${itemsHtml}</div>
                        <div class="d-flex justify-content-between align-items-center mt-3">
                            <h5 class="text-success">Tổng tiền: ${order.TotalAmount.toLocaleString("vi-VN")} ₫</h5>
                            <button class="btn btn-primary reorder-button" data-order-id="${order.OrderId}">Mua lại</button>
                        </div>
                    </div>
                `;

                    orderHistoryList.appendChild(card);
                });

                // Gắn sự kiện cho nút "Mua lại"
                document.querySelectorAll(".reorder-button").forEach(button => {
                    button.addEventListener("click", function () {
                        reorderOrder(this.dataset.orderId);
                    });
                });
            })
            .catch(error => {
                console.error("Lỗi khi tải lịch sử mua hàng:", error);
                orderHistoryList.innerHTML = "<p class='text-center text-danger'>Lỗi khi tải dữ liệu.</p>";
            });
    }


    // Xử lý mua lại
    function reorder(orderId) {
        fetch(`/Cart/Reorder?orderId=${orderId}`, { method: "POST" })
            .then(response => {
                if (response.ok) {
                    window.location.href = "/Cart";
                } else {
                    alert("Có lỗi xảy ra khi mua lại đơn hàng!");
                }
            })
            .catch(error => console.error("Có lỗi xảy ra:", error));
    } function reorderOrder(orderId) {
        fetch("/Account/Reorder", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({ orderId })
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert(data.message); // Hiển thị thông báo thành công
                    window.location.href = "/Cart/ViewCart";
                } else {
                    alert(data.message || "Không thể mua lại đơn hàng. Vui lòng thử lại.");
                }
            })
            .catch(error => {
                console.error("Lỗi khi thực hiện chức năng mua lại:", error);
                alert("Có lỗi xảy ra khi mua lại.");
            });
    }
</script>
